<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.LoginUi" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/color_pink</item>
        <item name="colorPrimaryVariant">@color/color_pink</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/color_pink</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">@color/color_pink</item>
        <item name="bottomSheetDialogTheme">@style/AppBottomSheetDialogTheme</item>
        <!--        <item name="android:textColor">@color/text_color</item>-->
        <!--        <item name="fontFamily">@font/poppinslight</item>-->
        <!-- Customize your theme here. -->
    </style>

    <style name="AppBottomSheetDialogTheme" parent="Theme.Design.Light.BottomSheetDialog">
        <item name="bottomSheetStyle">@style/AppModalStyle</item>
    </style>
    <style name="textInputLayoutTheme" parent="Widget.Design.TextInputLayout">
        <!-- Customize your theme here. -->

        <item name="android:textColorHint">@android:color/tertiary_text_dark</item>
        <item name="android:textSize">20sp</item>
        <item name="colorAccent">@color/purple_500</item>
        <item name="colorControlNormal">@android:color/tertiary_text_dark</item>
        <item name="colorControlActivated">@android:color/holo_orange_light</item>
    </style>
    <style name="AppModalStyle" parent="Widget.Design.BottomSheet.Modal">
        <item name="android:background">@drawable/round_dialog</item>
    </style>

    <style name="editTextTheme">
        <item name="android:textSize">12sp</item>
        <item name="fontFamily">@font/poppinssemibold</item>
        <item name="android:background">@null</item>
    </style>

    <style name="buttonTheme" parent="TextAppearance.AppCompat.Button">
        <item name="fontFamily">@font/poppinssemibold</item>
        <item name="android:textSize">16dp</item>
        <item name="android:paddingTop">6dp</item>
        <item name="android:paddingBottom">6dp</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:background">@drawable/button_bg</item>
    </style>

    <style name="Theme.LoginUi.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="Theme.LoginUi.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="Theme.LoginUi.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

    <declare-styleable name="CalendarView">

        <!-- The xml resource that is inflated and used as the day cell view, must be provided. -->
        <attr name="cv_dayViewResource" format="reference" />

        <!-- The xml resource that is inflated and used as a header for every month. -->
        <attr name="cv_monthHeaderResource" format="reference" />

        <!-- The xml resource that is inflated and used as a footer for every month. -->
        <attr name="cv_monthFooterResource" format="reference" />

        <!-- The maximum number of rows(1 to 6) to show on each month. If a month has a total of
        6 rows and maxRowCount is set to 4, there will be two appearances of that month on the
        calendar, the first one will show 4 rows and the second one will show the remaining 2 rows.
        To show a week mode calendar, set this value to 1. -->
        <attr name="cv_maxRowCount" format="integer" />

        <!-- A ViewGroup which is instantiated and used as the background for each month.
         This class must have a constructor which takes only a Context. You should
         exclude the name and constructor of this class from code obfuscation if enabled. -->
        <attr name="cv_monthViewClass" format="string" />

        <!-- Determines if dates of a month should stay in its section or can flow into another month's section.
         If true, a section can only contain dates belonging to that month, its inDates and outDates.
         if false, the dates are added continuously, irrespective of month sections.

         When this property is false, a few things behave slightly differently:
         - If inDateStyle is either `allMonths` or `firstMonth`, only the first index will contain inDates.
         - If outDateStyle is either `endOfRow` or `endOfGrid`, only the last index will contain outDates.
         - If outDateStyle is `endOfGrid`, outDates are generated for the last index until it
           satisfies the `maxRowCount` requirement. -->
        <attr name="cv_hasBoundaries" format="boolean" />

        <!--This determines the scroll direction of the the calendar. -->
        <attr name="cv_orientation" format="enum">
            <enum name="horizontal" value="0" />
            <enum name="vertical" value="1" />
        </attr>

        <!-- Determines how outDates are generated for each month on the calendar.
        If set to `endOfRow`, the calendar will generate outDates until
        it reaches the first end of a row. This means that if a month has 6 rows,
        it will display 6 rows and if a month has 5 rows, it will display 5 rows.
        If set to `endOfGrid`, the calendar will generate outDates until
        it reaches the end of a 6 x 7 grid. This means that all months will have 6 rows.
        If set to `none`, no outDates will be generated. -->
        <attr name="cv_outDateStyle" format="enum">
            <enum name="endOfRow" value="0" />
            <enum name="endOfGrid" value="1" />
            <enum name="none" value="2" />
        </attr>

        <!-- Determines how inDates are generated for each month on the calendar.
         If set to `allMonths`, the calendar will generate inDates for all months.
         If set to `firstMonth`, inDates will be generated for the first month only.
         If set to `none`, inDates will not be generated, this means that there will be
         no offset on any month. -->
        <attr name="cv_inDateStyle" format="enum">
            <enum name="allMonths" value="0" />
            <enum name="firstMonth" value="1" />
            <enum name="none" value="2" />
        </attr>

        <!-- The scrolling behavior of the calendar. If `paged`, the calendar
        will snap to the nearest month after a scroll or swipe action.
        If `continuous`, the calendar scrolls normally. -->
        <attr name="cv_scrollMode" format="enum">
            <enum name="continuous" value="0" />
            <enum name="paged" value="1" />
        </attr>

        <!-- The duration in milliseconds of the animation used to adjust the CalendarView's
        height when `scrollMode` is `paged` and the CalendarView height is set to `wrap_content`.
        The height change happens when the CalendarView scrolls to a month which has less or more
        rows than the previous one. Default value is 200. To disable the animation, set this value to zero. -->
        <attr name="cv_wrappedPageHeightAnimationDuration" format="integer" />
    </declare-styleable>
    <style name="CalenderViewCustom" parent="Theme.AppCompat">
        <item name="colorAccent">@color/color_pink</item>
        <item name="colorPrimary">@color/white</item>
        <item name="android:textColorPrimary">@color/white</item>
    </style>

    <style name="CalenderViewDateCustomText" parent="android:TextAppearance.DeviceDefault.Small">
        <item name="android:textColor">@color/text_color</item>
        <item name="android:weekNumberColor">@color/color_pink</item>
    </style>

    <style name="CalenderViewWeekCustomText" parent="android:TextAppearance.DeviceDefault.Small">
        <item name="android:textColor">@color/black</item>
    </style>
</resources>